<!DOCTYPE html>
<html lang="en"><head>
<link href="../../assets/favicon_io/favicon.ico" rel="icon">
<script src="../../site_libs/clipboard/clipboard.min.js"></script>
<script src="../../site_libs/quarto-html/tabby.min.js"></script>
<script src="../../site_libs/quarto-html/popper.min.js"></script>
<script src="../../site_libs/quarto-html/tippy.umd.min.js"></script>
<link href="../../site_libs/quarto-html/tippy.css" rel="stylesheet">
<link href="../../site_libs/quarto-html/light-border.css" rel="stylesheet">
<link href="../../site_libs/quarto-html/quarto-syntax-highlighting-dark-8ea72dc5fed832574809a9c94082fbbb.css" rel="stylesheet" id="quarto-text-highlighting-styles"><meta charset="utf-8">
  <meta name="generator" content="quarto-1.6.40">

  <meta name="dcterms.date" content="2025-01-20">
  <title>{{&lt; var course.title &gt;}} – Developer environment setup</title>
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/reset.css">
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/reveal.css">
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    div.columns{display: flex; gap: min(4vw, 1.5em);}
    div.column{flex: auto; overflow-x: auto;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    ul.task-list li input[type="checkbox"] {
      width: 0.8em;
      margin: 0 0.8em 0.2em -1em; /* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */ 
      vertical-align: middle;
    }
    /* CSS for syntax highlighting */
    pre > code.sourceCode { white-space: pre; position: relative; }
    pre > code.sourceCode > span { line-height: 1.25; }
    pre > code.sourceCode > span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode > span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre > code.sourceCode { white-space: pre-wrap; }
    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code > span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code > span > a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
      }
    pre.numberSource { margin-left: 3em;  padding-left: 4px; }
    div.sourceCode
      { color: #f8f8f2;  }
    @media screen {
    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
    }
    code span { color: #f8f8f2; } /* Normal */
    code span.al { color: #f07178; background-color: #2a0f15; font-weight: bold; } /* Alert */
    code span.an { color: #d4d0ab; } /* Annotation */
    code span.at { color: #00e0e0; } /* Attribute */
    code span.bn { color: #d4d0ab; } /* BaseN */
    code span.bu { color: #abe338; } /* BuiltIn */
    code span.cf { color: #ffa07a; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #abe338; } /* Char */
    code span.cn { color: #ffd700; } /* Constant */
    code span.co { color: #f8f8f2; font-style: italic; } /* Comment */
    code span.cv { color: #ffd700; } /* CommentVar */
    code span.do { color: #f8f8f2; } /* Documentation */
    code span.dt { color: #ffa07a; } /* DataType */
    code span.dv { color: #d4d0ab; } /* DecVal */
    code span.er { color: #f07178; text-decoration: underline; } /* Error */
    code span.ex { color: #00e0e0; font-weight: bold; } /* Extension */
    code span.fl { color: #d4d0ab; } /* Float */
    code span.fu { color: #ffa07a; } /* Function */
    code span.im { color: #abe338; } /* Import */
    code span.in { color: #d4d0ab; } /* Information */
    code span.kw { color: #ffa07a; font-weight: bold; } /* Keyword */
    code span.op { color: #ffa07a; } /* Operator */
    code span.ot { color: #00e0e0; } /* Other */
    code span.pp { color: #dcc6e0; } /* Preprocessor */
    code span.re { color: #00e0e0; background-color: #f8f8f2; } /* RegionMarker */
    code span.sc { color: #abe338; } /* SpecialChar */
    code span.ss { color: #abe338; } /* SpecialString */
    code span.st { color: #abe338; } /* String */
    code span.va { color: #00e0e0; } /* Variable */
    code span.vs { color: #abe338; } /* VerbatimString */
    code span.wa { color: #dcc6e0; } /* Warning */
  </style>
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/theme/quarto-ab7a322b4ca39adb1086c9e0171297e3.css">
  <link href="../../site_libs/revealjs/plugin/quarto-line-highlight/line-highlight.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/reveal-menu/menu.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/reveal-menu/quarto-menu.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/quarto-support/footer.css" rel="stylesheet">
  <style type="text/css">
    .reveal div.sourceCode {
      margin: 0;
      overflow: auto;
    }
    .reveal div.hanging-indent {
      margin-left: 1em;
      text-indent: -1em;
    }
    .reveal .slide:not(.center) {
      height: 100%;
      overflow-y: auto;
    }
    .reveal .slide.scrollable {
      overflow-y: auto;
    }
    .reveal .footnotes {
      height: 100%;
      overflow-y: auto;
    }
    .reveal .slide .absolute {
      position: absolute;
      display: block;
    }
    .reveal .footnotes ol {
      counter-reset: ol;
      list-style-type: none; 
      margin-left: 0;
    }
    .reveal .footnotes ol li:before {
      counter-increment: ol;
      content: counter(ol) ". "; 
    }
    .reveal .footnotes ol li > p:first-child {
      display: inline-block;
    }
    .reveal .slide ul,
    .reveal .slide ol {
      margin-bottom: 0.5em;
    }
    .reveal .slide ul li,
    .reveal .slide ol li {
      margin-top: 0.4em;
      margin-bottom: 0.2em;
    }
    .reveal .slide ul[role="tablist"] li {
      margin-bottom: 0;
    }
    .reveal .slide ul li > *:first-child,
    .reveal .slide ol li > *:first-child {
      margin-block-start: 0;
    }
    .reveal .slide ul li > *:last-child,
    .reveal .slide ol li > *:last-child {
      margin-block-end: 0;
    }
    .reveal .slide .columns:nth-child(3) {
      margin-block-start: 0.8em;
    }
    .reveal blockquote {
      box-shadow: none;
    }
    .reveal .tippy-content>* {
      margin-top: 0.2em;
      margin-bottom: 0.7em;
    }
    .reveal .tippy-content>*:last-child {
      margin-bottom: 0.2em;
    }
    .reveal .slide > img.stretch.quarto-figure-center,
    .reveal .slide > img.r-stretch.quarto-figure-center {
      display: block;
      margin-left: auto;
      margin-right: auto; 
    }
    .reveal .slide > img.stretch.quarto-figure-left,
    .reveal .slide > img.r-stretch.quarto-figure-left  {
      display: block;
      margin-left: 0;
      margin-right: auto; 
    }
    .reveal .slide > img.stretch.quarto-figure-right,
    .reveal .slide > img.r-stretch.quarto-figure-right  {
      display: block;
      margin-left: auto;
      margin-right: 0; 
    }
  </style>
<meta property="og:title" content="Developer environment setup – Connected Objects">
<meta property="og:description" content="Instructions for setting up classroom and personal computers for programming in this course, including: setting up a Debian container on WSL; restoring your WSL container from backup quickly; installing needed dependencies on WSL, Mac/OSX, and Linux; verifying that needed dependencies have been installed.">
<meta property="og:image" content="https://john-abbott-college.github.io/6P3-Notes/notes/developer-environment/assets/art_title_path_only.svg">
<meta property="og:site_name" content="{{< var course.title >}}">
</head>
<body class="quarto-dark">
  <div class="reveal">
    <div class="slides">

<section id="title-slide" class="quarto-title-block center">
  <h1 class="title">Developer environment setup</h1>
  <p class="subtitle"></p><p>Instructions for setting up classroom and personal computers for programming in this course, including: setting up a Debian container on WSL; restoring your WSL container from backup quickly; installing needed dependencies on WSL, Mac/OSX, and Linux; verifying that needed dependencies have been installed.</p><p></p>

<div class="quarto-title-authors">
</div>

  <p class="date">2025-01-20</p>
</section>
<section class="slide level2">

<div class="column-margin">
<div class="quarto-figure quarto-figure-center">
<figure>
<p><img data-src="./assets/vintage-drill-press.jpg"></p>
<figcaption><a href="https://www.pexels.com/photo/a-vintage-drilling-machine-5846273/">Photo by Tima Miroshnichenko</a></figcaption>
</figure>
</div>
</div>
</section>
<section id="overview" class="slide level2">
<h2>Overview</h2>
<p>Throughout this semester, we will make regular use of <code>bash</code>, <code>python</code>, <code>git</code>, and other 3rd party command line tools such as <code>azure-cli</code> and <code>gh-cli</code>.</p>
<p>No matter what hardware you have available at home, everyone should be comfortable completing coding assignments on their personal computers and on classroom computers.</p>
<p>Everyone will need the following set up:</p>
<ul>
<li>on a classroom computer:
<ul>
<li>a Debian WSL container with all class dependencies installed using <code>apt</code></li>
</ul></li>
<li>on personal computers:
<ul>
<li>If Windows: a Debian WSL container with all class dependencies installed using <code>apt</code></li>
<li>If macOS: all class dependencies installed using <code>brew</code></li>
<li>If Linux: all class dependencies installed using distribution package manager</li>
</ul></li>
</ul>
<p>The sections below show how to do that, and how to verify the installation, in each case.</p>
</section>
<section id="classroom-computers-linux-wsl" class="slide level2 scrollable">
<h2>Classroom computers: Linux WSL</h2>
<p>If using a Windows machine (lab computers and/or personal) for this course, you will need to set up Windows Subsystem for Linux (WSL).</p>
<h3 id="ensure-necessary-windows-software-installed">Ensure necessary Windows software installed</h3>
<p>These programs should already be installed on your Windows machine, but in case they are not:</p>
<ul>
<li><a href="https://git-scm.com/downloads/win">Link for installing git on Windows</a></li>
<li><a href="https://www.microsoft.com/store/apps/9n0dx20hk701">Link for installing Windows Terminal</a></li>
</ul>
<h4 id="vs-code-extensions">VS Code Extensions</h4>
<p>If you have not already, <a href="https://code.visualstudio.com/download">install VSCode</a>.</p>
<p>Then, install the following extensions:</p>
<ol type="1">
<li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack">Remote Development extension pack by Microsoft</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python">Python language support extension</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=charliermarsh.ruff">Python formatter/linter extension (ruff)</a></li>
</ol>
<h3 id="install-debian-wsl">Install Debian WSL</h3>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Powershell</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="Powershell"><pre class="sourceCode numberSource powershell number-lines code-with-copy"><code class="sourceCode powershell"><span id="cb1-1"><a></a><span class="co"># Verify that Debian is an available OS to install</span></span>
<span id="cb1-2"><a></a><span class="fu">PS</span> <span class="op">&gt;</span> wsl <span class="op">--</span>list <span class="op">--</span>online <span class="co"># Debian should be one of the results</span></span>
<span id="cb1-3"><a></a></span>
<span id="cb1-4"><a></a><span class="co"># Install Debian</span></span>
<span id="cb1-5"><a></a><span class="fu">PS</span> <span class="op">&gt;</span> wsl <span class="op">--</span>install <span class="op">-</span>d Debian</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<p>You will be prompted to create a username and password:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Powershell</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="Powershell"><pre class="sourceCode numberSource powershell number-lines code-with-copy"><code class="sourceCode powershell"><span id="cb2-1"><a></a><span class="co"># Recommended: All lower case. Something easy to type, e.g. your first name</span></span>
<span id="cb2-2"><a></a>Enter new UNIX username<span class="op">:</span></span>
<span id="cb2-3"><a></a><span class="co"># Recommended: Don't overthink this, you can always change this later</span></span>
<span id="cb2-4"><a></a>New password<span class="op">:</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<div class="column-margin">
<div class="callout callout-note callout-titled callout-style-default">
<div class="callout-body">
<div class="callout-title">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<p><strong>Note</strong></p>
</div>
<div class="callout-content">
<p>If you forget the password for your WSL container, you can easily reset it.</p>
<p>See the Microsoft article <a href="https://learn.microsoft.com/en-us/windows/wsl/setup/environment#set-up-your-linux-username-and-password">Set up your linux username and password</a>.</p>
</div>
</div>
</div>
</div>
<p>After this, your installation is complete.</p>
<p>See the following links for more details if needed:</p>
<ul>
<li><a href="https://learn.microsoft.com/en-us/windows/wsl/setup/environment">Install Debian on WSL</a></li>
<li><a href="https://learn.microsoft.com/en-ca/windows/wsl/install#change-the-default-linux-distribution-installed">Choosing Debian as the Linux distribution</a></li>
<li><a href="https://learn.microsoft.com/en-us/windows/wsl/troubleshooting">Troubleshooting WSL installation</a></li>
</ul>
<h3 id="configure-terminal-to-use-wsl">Configure terminal to use WSL</h3>
<p>Follow the steps in <a href="https://learn.microsoft.com/en-us/windows/wsl/setup/environment#set-up-windows-terminal">Set up Windows Terminal</a>, particularly:</p>
<div class="column-margin">
<div class="quarto-figure quarto-figure-center">
<figure>
<p><img data-src="https://learn.microsoft.com/en-us/windows/wsl/media/terminal.png"></p>
<figcaption>We’re going to spend a lot of time in terminal environments – you might as well enjoy using it. I find it motivating to use terminals that look and feel good to use. <a href="https://learn.microsoft.com/en-us/windows/wsl/setup/environment#set-up-windows-terminal">Image source</a></figcaption>
</figure>
</div>
</div>
<ul>
<li><p>Ensure your <code>Debian</code> WSL instance is the <a href="https://learn.microsoft.com/en-us/windows/terminal/customize-settings/startup#default-profile">default profile</a></p>
<ul>
<li>Then, pin Windows Terminal to your taskbar, ideally as the first app</li>
<li>Use <code>Win+1</code> to open Windows Terminal automatically.</li>
</ul></li>
<li><p><a href="https://learn.microsoft.com/en-us/windows/terminal/customize-settings/appearance#theme">Choose a theme</a></p></li>
<li><p><a href="https://learn.microsoft.com/en-us/windows/terminal/customize-settings/color-schemes">Choose a color scheme</a></p>
<ul>
<li><a href="https://learn.microsoft.com/en-us/windows/terminal/custom-terminal-gallery/custom-schemes">Customizing a color scheme</a></li>
</ul></li>
<li><p><a href="https://learn.microsoft.com/en-us/windows/terminal/search">Practise searching through terminal output using <code>Ctrl+Shift+F</code></a></p></li>
<li><p><a href="https://learn.microsoft.com/en-us/windows/terminal/tips-and-tricks#copypaste">Make sure you know how to copy/paste text in Windows Terminal</a></p>
<ul>
<li>You can also use <code>Ctrl+Shift+c</code> and <code>Ctrl+Shift+v</code> to copy/paste in terminals</li>
<li>You can also use <code>Ctrl+Insert</code> and <code>Shift+Insert</code> to copy paste in terminals</li>
</ul></li>
<li><p>Use <code>Ctrl+Shift+P</code> to open the command palette to do almost any terminal config command (very similar to VSCode).</p>
<ul>
<li>This is very useful for learning hotkeys for the following things:
<ul>
<li>making terminal panes</li>
<li>changing focus</li>
</ul></li>
</ul></li>
</ul>
<p>See <a href="https://learn.microsoft.com/en-us/windows/terminal/troubleshooting">Troubleshooting Windows Terminal</a> for more details.</p>
<h3 id="install-dependencies">Install dependencies</h3>
<h4 id="perform-system-update">Perform system update</h4>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bash</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="bash"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><a></a><span class="co"># Update system:</span></span>
<span id="cb3-2"><a></a><span class="fu">sudo</span> apt update <span class="kw">&amp;&amp;</span> <span class="fu">sudo</span> apt upgrade <span class="at">-y</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<h4 id="install-python">Install python</h4>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bash</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="bash"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><a></a><span class="co"># Verify python version is &gt;= 3.9:</span></span>
<span id="cb4-2"><a></a><span class="ex">python3</span> <span class="at">--version</span></span>
<span id="cb4-3"><a></a><span class="co"># Ensure pip is installed:</span></span>
<span id="cb4-4"><a></a><span class="fu">sudo</span> apt install python3-pip</span>
<span id="cb4-5"><a></a><span class="ex">pip3</span> <span class="at">--version</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<h4 id="set-up-git">Set up git</h4>
<p>You’ll need to do the following to set up <code>git</code> on both your WSL:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bash</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="bash"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><a></a><span class="fu">sudo</span> apt install git</span>
<span id="cb5-2"><a></a><span class="fu">git</span> config <span class="at">--global</span> user.name <span class="st">"Your Name"</span></span>
<span id="cb5-3"><a></a><span class="fu">git</span> config <span class="at">--global</span> user.email <span class="st">"youremail@domain.com"</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<p>See <a href="https://learn.microsoft.com/en-us/windows/wsl/tutorials/wsl-git#installing-git">Installing Git</a> for more detail if needed.</p>
<h4 id="install-other-needed-tools">Install other needed tools</h4>
<p>We’re going to need the following packages:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bash</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="bash"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><a></a><span class="fu">sudo</span> apt install man ssh wget ca-certificates rsync pass pass-extension-otp zbar-tools vim</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<p><em>Last update to this command: <strong>?meta:date-modified</strong></em></p>
<div class="callout callout-note callout-titled callout-style-default">
<div class="callout-body">
<div class="callout-title">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<p><strong>Note</strong></p>
</div>
<div class="callout-content">
<p>If, when running <code>sudo apt install</code>, you have an error like this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bash</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="bash"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><a></a><span class="ex">E:</span> Failed to fetch <span class="op">&lt;</span>url<span class="op">&gt;</span> 404 Not Found [IP: <span class="op">&lt;</span>ip<span class="op">&gt;</span>]</span>
<span id="cb7-2"><a></a><span class="ex">E:</span> Unable to fetch some archives, maybe run apt get update or try with <span class="at">--fix-missing</span><span class="pp">?</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<p>Make sure you update the system:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bash</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="bash"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><a></a><span class="co"># you can also run sudo apt upgrade -y, but it's not necessary all the time.</span></span>
<span id="cb8-2"><a></a><span class="fu">sudo</span> apt update</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<p>Then, try the installation command again.</p>
</div>
</div>
</div>
<p>I’ll keep this command updated throughout the semester as we encounter more packages we need.</p>
<h3 id="backup-container-to-onedrive">Backup container to OneDrive</h3>
<p>Once the initial setup is complete, backups of the WSL container are easy to make.</p>
<p>Once a backup is made, it’s easy to:</p>
<ul>
<li>recreate the exact same image on a new machine</li>
<li>restore your image in case the disk is wiped (this seems to be happening to our lab computers…)</li>
</ul>
<h4 id="backup-command">Backup command</h4>
<p>First, let’s ensure you have a folder to keep your backups.</p>
<p>Recommendation: store WSL images on your college OneDrive account. That way, you can easily share your image with your personal computer, and restore your image automatically using any college computer.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Powershell</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="Powershell"><pre class="sourceCode numberSource powershell number-lines code-with-copy"><code class="sourceCode powershell"><span id="cb9-1"><a></a><span class="fu">PS</span> <span class="op">&gt;</span> <span class="fu">md</span> <span class="op">-</span>Force <span class="st">"C:\Users\&lt;your-username&gt;\OneDrive\420-6P3-W25"</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<p>Then, we’ll use <code>wsl --export</code> to make a backup copy of your WSL container:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Powershell</strong></pre>
</div>
<div class="sourceCode" id="cb10" data-filename="Powershell"><pre class="sourceCode numberSource powershell number-lines code-with-copy"><code class="sourceCode powershell"><span id="cb10-1"><a></a><span class="co"># This can take around 5 minutes to finish.</span></span>
<span id="cb10-2"><a></a><span class="fu">PS</span> <span class="op">&gt;</span> wsl <span class="op">--</span>export Debian <span class="st">"C:\Users\&lt;your-username\OneDrive\420-6P3-W25\debian.tar</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<h4 id="restore-command">Restore command</h4>
<p>On a new machine (or on a machine with a freshly wiped hard drive…) you can <code>--import</code> the backup image you created:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Powershell</strong></pre>
</div>
<div class="sourceCode" id="cb11" data-filename="Powershell"><pre class="sourceCode numberSource powershell number-lines code-with-copy"><code class="sourceCode powershell"><span id="cb11-1"><a></a><span class="co"># This can take around 5 minutes to finish.</span></span>
<span id="cb11-2"><a></a><span class="fu">PS</span> <span class="op">&gt;</span> wsl <span class="op">--</span>import Debian <span class="op">.</span>\Debian <span class="st">"C:\Users\&lt;your-username&gt;\OneDrive\debian.tar"</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<div class="callout callout-note callout-titled callout-style-default">
<div class="callout-body">
<div class="callout-title">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<p><strong>Note</strong></p>
</div>
<div class="callout-content">
<p>After restoring WSL, you will find that you are automatically logged in as <code>root</code> instead of your username.</p>
<p>The way to set a default user in a WSL container instance is to create a <code>[user]</code> entry in the container’s <code>/etc/wsl.conf</code> file:</p>
<p>Open your wsl instance and add the following entry to <code>/etc/wsl.conf</code>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/wsl.conf</strong></pre>
</div>
<pre data-filename="/etc/wsl.conf"><code>[user]
default=username</code></pre>
</div>
<p>Exit your distro/instance, then run a <code>wsl --terminate &lt;distroname&gt;</code> from PowerShell.</p>
<p>When you restart, the default user should be set to <code>username</code>.</p>
<p>For more detail: https://superuser.com/a/1627461</p>
</div>
</div>
</div>
</section>
<section id="personal-computers" class="slide level2">
<h2>Personal computers</h2>
<h3 id="windows-wsl">Windows (WSL)</h3>
<p>After <a href="#/classroom-computers-linux-wsl">setting up WSL</a> on a classroom computer, and <a href="#/backup-command">backing up your WSL</a> to OneDrive, the easiest way to set up WSL on your personal computer is to <a href="http://localhost:7848/notes/developer-environment/#restore-command">import your backup WSL image</a> on your personal computer.</p>
<p>Note that any changes made to either container, after the import, will not be automatically synchronized.</p>
<p>If you are making many customizations, you might want to keep your backup up-to-date.</p>
<h3 id="macos-linux">macOS / Linux</h3>
<p>On a terminal on your computer, install the packages below.</p>
<p>On OS X we’ll use <code>brew</code>, on Linux you can use your system’s package manager:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bash</strong></pre>
</div>
<div class="sourceCode" id="cb13" data-filename="bash"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><a></a><span class="co"># Update system:</span></span>
<span id="cb13-2"><a></a><span class="ex">brew</span> update <span class="kw">&amp;&amp;</span> <span class="ex">brew</span> upgrade</span>
<span id="cb13-3"><a></a><span class="co"># Verify python version is &gt;= 3.9:</span></span>
<span id="cb13-4"><a></a><span class="ex">python3</span> <span class="at">--version</span></span>
<span id="cb13-5"><a></a><span class="co"># Ensure pip is installed:</span></span>
<span id="cb13-6"><a></a><span class="ex">python3</span> <span class="at">-m</span> pip install <span class="at">--upgrade</span> pip</span>
<span id="cb13-7"><a></a></span>
<span id="cb13-8"><a></a><span class="co"># Install other dependencies</span></span>
<span id="cb13-9"><a></a><span class="ex">brew</span> install wget ca-certificates rsync pass pass-otp zbar vim</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<p><em>Last update to this command: <strong>?meta:date-modified</strong></em></p>
<p>Also ensure you have <a href="#/vs-code-extensions">installed VSCode and configured its extensions</a></p>
</section>
<section id="verify-environment" class="slide level2">
<h2>Verify environment</h2>
<p>Your developer environment, whether on WSL, macOS, or Linux, should be able to run the following commands with the following results:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bash</strong></pre>
</div>
<div class="sourceCode" id="cb14" data-filename="bash"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><a></a><span class="co"># Verify python version is &gt;= 3.9 and pip is installed</span></span>
<span id="cb14-2"><a></a><span class="ex">python3</span> <span class="at">--version</span></span>
<span id="cb14-3"><a></a><span class="ex">pip3</span> <span class="at">--version</span> <span class="co"># or pip --version</span></span>
<span id="cb14-4"><a></a></span>
<span id="cb14-5"><a></a><span class="co"># Verify git config set up: ensure the output makes sense for you</span></span>
<span id="cb14-6"><a></a><span class="fu">git</span> config user.name</span>
<span id="cb14-7"><a></a><span class="fu">git</span> config user.email</span>
<span id="cb14-8"><a></a></span>
<span id="cb14-9"><a></a><span class="co"># For the following no specific version is required</span></span>
<span id="cb14-10"><a></a><span class="co"># but, these commands should not fail (show error message or exit error code 1)</span></span>
<span id="cb14-11"><a></a><span class="fu">man</span> <span class="at">-V</span></span>
<span id="cb14-12"><a></a><span class="fu">ssh</span> <span class="at">-V</span></span>
<span id="cb14-13"><a></a><span class="fu">rsync</span> <span class="at">--version</span></span>
<span id="cb14-14"><a></a><span class="ex">pass</span> <span class="at">--version</span></span>
<span id="cb14-15"><a></a><span class="ex">pass</span> otp <span class="at">--version</span></span>
<span id="cb14-16"><a></a><span class="ex">zbarimg</span> <span class="at">--version</span></span>
<span id="cb14-17"><a></a><span class="ex">vim</span> <span class="at">--version</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>


</section>
    </div>
  <div class="quarto-auto-generated-content" style="display: none;">
<div class="footer footer-default">
<p>© Copyright 2024-2025 Michael Haaf. All rights reserved.</p>
</div>
</div></div>

  <script>window.backupDefine = window.define; window.define = undefined;</script>
  <script src="../../site_libs/revealjs/dist/reveal.js"></script>
  <!-- reveal.js plugins -->
  <script src="../../site_libs/revealjs/plugin/quarto-line-highlight/line-highlight.js"></script>
  <script src="../../site_libs/revealjs/plugin/pdf-export/pdfexport.js"></script>
  <script src="../../site_libs/revealjs/plugin/reveal-menu/menu.js"></script>
  <script src="../../site_libs/revealjs/plugin/reveal-menu/quarto-menu.js"></script>
  <script src="../../site_libs/revealjs/plugin/quarto-support/support.js"></script>
  

  <script src="../../site_libs/revealjs/plugin/notes/notes.js"></script>
  <script src="../../site_libs/revealjs/plugin/search/search.js"></script>
  <script src="../../site_libs/revealjs/plugin/zoom/zoom.js"></script>
  <script src="../../site_libs/revealjs/plugin/math/math.js"></script>
  <script>window.define = window.backupDefine; window.backupDefine = undefined;</script>

  <script>

      // Full list of configuration options available at:
      // https://revealjs.com/config/
      Reveal.initialize({
'controlsAuto': true,
'previewLinksAuto': false,
'pdfSeparateFragments': false,
'autoAnimateEasing': "ease",
'autoAnimateDuration': 1,
'autoAnimateUnmatched': true,
'jumpToSlide': true,
'menu': {"side":"left","useTextContentForMissingTitles":true,"markers":false,"loadIcons":false,"custom":[{"title":"Tools","icon":"<i class=\"fas fa-gear\"></i>","content":"<ul class=\"slide-menu-items\">\n<li class=\"slide-tool-item active\" data-item=\"0\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.fullscreen(event)\"><kbd>f</kbd> Fullscreen</a></li>\n<li class=\"slide-tool-item\" data-item=\"1\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.speakerMode(event)\"><kbd>s</kbd> Speaker View</a></li>\n<li class=\"slide-tool-item\" data-item=\"2\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.overview(event)\"><kbd>o</kbd> Slide Overview</a></li>\n<li class=\"slide-tool-item\" data-item=\"3\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.togglePdfExport(event)\"><kbd>e</kbd> PDF Export Mode</a></li>\n<li class=\"slide-tool-item\" data-item=\"4\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.toggleScrollView(event)\"><kbd>r</kbd> Scroll View Mode</a></li>\n<li class=\"slide-tool-item\" data-item=\"5\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.keyboardHelp(event)\"><kbd>?</kbd> Keyboard Help</a></li>\n</ul>"}],"openButton":true},
'smaller': true,
 
        // Display controls in the bottom right corner
        controls: false,

        // Help the user learn the controls by providing hints, for example by
        // bouncing the down arrow when they first encounter a vertical slide
        controlsTutorial: false,

        // Determines where controls appear, "edges" or "bottom-right"
        controlsLayout: 'edges',

        // Visibility rule for backwards navigation arrows; "faded", "hidden"
        // or "visible"
        controlsBackArrows: 'faded',

        // Display a presentation progress bar
        progress: true,

        // Display the page number of the current slide
        slideNumber: false,

        // 'all', 'print', or 'speaker'
        showSlideNumber: 'all',

        // Add the current slide number to the URL hash so that reloading the
        // page/copying the URL will return you to the same slide
        hash: true,

        // Start with 1 for the hash rather than 0
        hashOneBasedIndex: false,

        // Flags if we should monitor the hash and change slides accordingly
        respondToHashChanges: true,

        // Push each slide change to the browser history
        history: true,

        // Enable keyboard shortcuts for navigation
        keyboard: true,

        // Enable the slide overview mode
        overview: true,

        // Disables the default reveal.js slide layout (scaling and centering)
        // so that you can use custom CSS layout
        disableLayout: false,

        // Vertical centering of slides
        center: false,

        // Enables touch navigation on devices with touch input
        touch: true,

        // Loop the presentation
        loop: false,

        // Change the presentation direction to be RTL
        rtl: false,

        // see https://revealjs.com/vertical-slides/#navigation-mode
        navigationMode: 'linear',

        // Randomizes the order of slides each time the presentation loads
        shuffle: false,

        // Turns fragments on and off globally
        fragments: true,

        // Flags whether to include the current fragment in the URL,
        // so that reloading brings you to the same fragment position
        fragmentInURL: false,

        // Flags if the presentation is running in an embedded mode,
        // i.e. contained within a limited portion of the screen
        embedded: false,

        // Flags if we should show a help overlay when the questionmark
        // key is pressed
        help: true,

        // Flags if it should be possible to pause the presentation (blackout)
        pause: true,

        // Flags if speaker notes should be visible to all viewers
        showNotes: false,

        // Global override for autoplaying embedded media (null/true/false)
        autoPlayMedia: null,

        // Global override for preloading lazy-loaded iframes (null/true/false)
        preloadIframes: null,

        // Number of milliseconds between automatically proceeding to the
        // next slide, disabled when set to 0, this value can be overwritten
        // by using a data-autoslide attribute on your slides
        autoSlide: 0,

        // Stop auto-sliding after user input
        autoSlideStoppable: true,

        // Use this method for navigation when auto-sliding
        autoSlideMethod: null,

        // Specify the average time in seconds that you think you will spend
        // presenting each slide. This is used to show a pacing timer in the
        // speaker view
        defaultTiming: null,

        // Enable slide navigation via mouse wheel
        mouseWheel: false,

        // The display mode that will be used to show slides
        display: 'block',

        // Hide cursor if inactive
        hideInactiveCursor: true,

        // Time before the cursor is hidden (in ms)
        hideCursorTime: 5000,

        // Opens links in an iframe preview overlay
        previewLinks: false,

        // Transition style (none/fade/slide/convex/concave/zoom)
        transition: 'slide',

        // Transition speed (default/fast/slow)
        transitionSpeed: 'default',

        // Transition style for full page slide backgrounds
        // (none/fade/slide/convex/concave/zoom)
        backgroundTransition: 'none',

        // Number of slides away from the current that are visible
        viewDistance: 3,

        // Number of slides away from the current that are visible on mobile
        // devices. It is advisable to set this to a lower number than
        // viewDistance in order to save resources.
        mobileViewDistance: 2,

        // The "normal" size of the presentation, aspect ratio will be preserved
        // when the presentation is scaled to fit different resolutions. Can be
        // specified using percentage units.
        width: 1050,

        height: 700,

        // Factor of the display size that should remain empty around the content
        margin: 0.2,

        math: {
          mathjax: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js',
          config: 'TeX-AMS_HTML-full',
          tex2jax: {
            inlineMath: [['\\(','\\)']],
            displayMath: [['\\[','\\]']],
            balanceBraces: true,
            processEscapes: false,
            processRefs: true,
            processEnvironments: true,
            preview: 'TeX',
            skipTags: ['script','noscript','style','textarea','pre','code'],
            ignoreClass: 'tex2jax_ignore',
            processClass: 'tex2jax_process'
          },
        },

        // reveal.js plugins
        plugins: [QuartoLineHighlight, PdfExport, RevealMenu, QuartoSupport,

          RevealMath,
          RevealNotes,
          RevealSearch,
          RevealZoom
        ]
      });
    </script>
    <script id="quarto-html-after-body" type="application/javascript">
    window.document.addEventListener("DOMContentLoaded", function (event) {
      const toggleBodyColorMode = (bsSheetEl) => {
        const mode = bsSheetEl.getAttribute("data-mode");
        const bodyEl = window.document.querySelector("body");
        if (mode === "dark") {
          bodyEl.classList.add("quarto-dark");
          bodyEl.classList.remove("quarto-light");
        } else {
          bodyEl.classList.add("quarto-light");
          bodyEl.classList.remove("quarto-dark");
        }
      }
      const toggleBodyColorPrimary = () => {
        const bsSheetEl = window.document.querySelector("link#quarto-bootstrap");
        if (bsSheetEl) {
          toggleBodyColorMode(bsSheetEl);
        }
      }
      toggleBodyColorPrimary();  
      const tabsets =  window.document.querySelectorAll(".panel-tabset-tabby")
      tabsets.forEach(function(tabset) {
        const tabby = new Tabby('#' + tabset.id);
      });
      const isCodeAnnotation = (el) => {
        for (const clz of el.classList) {
          if (clz.startsWith('code-annotation-')) {                     
            return true;
          }
        }
        return false;
      }
      const onCopySuccess = function(e) {
        // button target
        const button = e.trigger;
        // don't keep focus
        button.blur();
        // flash "checked"
        button.classList.add('code-copy-button-checked');
        var currentTitle = button.getAttribute("title");
        button.setAttribute("title", "Copied!");
        let tooltip;
        if (window.bootstrap) {
          button.setAttribute("data-bs-toggle", "tooltip");
          button.setAttribute("data-bs-placement", "left");
          button.setAttribute("data-bs-title", "Copied!");
          tooltip = new bootstrap.Tooltip(button, 
            { trigger: "manual", 
              customClass: "code-copy-button-tooltip",
              offset: [0, -8]});
          tooltip.show();    
        }
        setTimeout(function() {
          if (tooltip) {
            tooltip.hide();
            button.removeAttribute("data-bs-title");
            button.removeAttribute("data-bs-toggle");
            button.removeAttribute("data-bs-placement");
          }
          button.setAttribute("title", currentTitle);
          button.classList.remove('code-copy-button-checked');
        }, 1000);
        // clear code selection
        e.clearSelection();
      }
      const getTextToCopy = function(trigger) {
          const codeEl = trigger.previousElementSibling.cloneNode(true);
          for (const childEl of codeEl.children) {
            if (isCodeAnnotation(childEl)) {
              childEl.remove();
            }
          }
          return codeEl.innerText;
      }
      const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {
        text: getTextToCopy
      });
      clipboard.on('success', onCopySuccess);
      if (window.document.getElementById('quarto-embedded-source-code-modal')) {
        const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {
          text: getTextToCopy,
          container: window.document.getElementById('quarto-embedded-source-code-modal')
        });
        clipboardModal.on('success', onCopySuccess);
      }
        var localhostRegex = new RegExp(/^(?:http|https):\/\/localhost\:?[0-9]*\//);
        var mailtoRegex = new RegExp(/^mailto:/);
          var filterRegex = new RegExp("https:\/\/john-abbott-college\.github\.io\/6P3-Notes\/");
        var isInternal = (href) => {
            return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);
        }
        // Inspect non-navigation links and adorn them if external
     	var links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');
        for (var i=0; i<links.length; i++) {
          const link = links[i];
          if (!isInternal(link.href)) {
            // undo the damage that might have been done by quarto-nav.js in the case of
            // links that we want to consider external
            if (link.dataset.originalHref !== undefined) {
              link.href = link.dataset.originalHref;
            }
          }
        }
      function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {
        const config = {
          allowHTML: true,
          maxWidth: 500,
          delay: 100,
          arrow: false,
          appendTo: function(el) {
              return el.closest('section.slide') || el.parentElement;
          },
          interactive: true,
          interactiveBorder: 10,
          theme: 'light-border',
          placement: 'bottom-start',
        };
        if (contentFn) {
          config.content = contentFn;
        }
        if (onTriggerFn) {
          config.onTrigger = onTriggerFn;
        }
        if (onUntriggerFn) {
          config.onUntrigger = onUntriggerFn;
        }
          config['offset'] = [0,0];
          config['maxWidth'] = 700;
        window.tippy(el, config); 
      }
      const noterefs = window.document.querySelectorAll('a[role="doc-noteref"]');
      for (var i=0; i<noterefs.length; i++) {
        const ref = noterefs[i];
        tippyHover(ref, function() {
          // use id or data attribute instead here
          let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');
          try { href = new URL(href).hash; } catch {}
          const id = href.replace(/^#\/?/, "");
          const note = window.document.getElementById(id);
          if (note) {
            return note.innerHTML;
          } else {
            return "";
          }
        });
      }
      const findCites = (el) => {
        const parentEl = el.parentElement;
        if (parentEl) {
          const cites = parentEl.dataset.cites;
          if (cites) {
            return {
              el,
              cites: cites.split(' ')
            };
          } else {
            return findCites(el.parentElement)
          }
        } else {
          return undefined;
        }
      };
      var bibliorefs = window.document.querySelectorAll('a[role="doc-biblioref"]');
      for (var i=0; i<bibliorefs.length; i++) {
        const ref = bibliorefs[i];
        const citeInfo = findCites(ref);
        if (citeInfo) {
          tippyHover(citeInfo.el, function() {
            var popup = window.document.createElement('div');
            citeInfo.cites.forEach(function(cite) {
              var citeDiv = window.document.createElement('div');
              citeDiv.classList.add('hanging-indent');
              citeDiv.classList.add('csl-entry');
              var biblioDiv = window.document.getElementById('ref-' + cite);
              if (biblioDiv) {
                citeDiv.innerHTML = biblioDiv.innerHTML;
              }
              popup.appendChild(citeDiv);
            });
            return popup.innerHTML;
          });
        }
      }
    });
    </script>
    

</body></html>