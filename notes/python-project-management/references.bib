@online{SrcLayoutVsa,
  title = {Src Layout vs Flat Layout - {{Python Packaging User Guide}}},
  urldate = {2025-05-04},
  url = {https://packaging.python.org/en/latest/discussions/src-layout-vs-flat-layout/},
}

@online{ImportSystem,
  title = {5. {{The}} Import System},
  journal = {Python documentation},
  urldate = {2025-05-04},
  abstract = {Python code in one module gains access to the code in another module by the process of importing it. The import statement is the most common way of invoking the import machinery, but it is not the ...},
  url = {https://docs.python.org/3/reference/import.html},
  langid = {english}
}

@online{Modules,
  title = {6. {{Modules}}},
  journal = {Python documentation},
  urldate = {2025-05-04},
  abstract = {If you quit from the Python interpreter and enter it again, the definitions you have made (functions and variables) are lost. Therefore, if you want to write a somewhat longer program, you are bett...},
  url = {https://docs.python.org/3/tutorial/modules.html},
  langid = {english}
}

@online{ayaAnswerRelativeImports2013,
  title = {Answer to "{{Relative}} Imports in {{Python}} 3"},
  author = {Aya},
  year = {2013},
  month = jun,
  journal = {Stack Overflow},
  urldate = {2025-05-04},
  url = {https://stackoverflow.com/a/16985066}
}

@online{brenbarnAnswerRelativeImports2013,
  title = {Answer to "{{Relative}} Imports for the Billionth Time"},
  author = {BrenBarn},
  year = {2013},
  month = jan,
  journal = {Stack Overflow},
  urldate = {2025-05-04},
  url = {https://stackoverflow.com/q/14132789}
}

@online{PackagingPythonLibrary,
  title = {Packaging a Python Library - {{Thoughts}} on Packaging Python Libraries},
  urldate = {2025-05-04},
  abstract = {Thoughts on packaging python libraries --- Note This is about packaging libraries, not applications. â¸» All the advice here is implemented in a project template (with full support for C...},
  url = {https://blog.ionelmc.ro/2014/05/25/python-packaging/},
  langid = {english}
}

@online{pythonPythonModulesPackages,
  title = {Python {{Modules}} and {{Packages}} -- {{An Introduction}} -- {{Real Python}}},
  author = {Python, Real},
  urldate = {2025-05-04},
  abstract = {This article explores Python modules and Python packages, two mechanisms that facilitate modular programming.},
  url = {https://realpython.com/python-modules-packages/},
  langid = {english}
}

@online{MakingPythonPackage,
  title = {Making a {{Python Package}} --- {{The Joy}} of {{Packaging}} 0.1 Documentation},
  urldate = {2025-05-04},
  url = {https://python-packaging-tutorial.readthedocs.io/en/2018/setup\_py.html},
}

@online{CompleteGuidePyprojecttoml2024,
  title = {The {{Complete Guide}} to Pyproject.Toml},
  year = {2024},
  month = jun,
  journal = {devsjc blogs //},
  urldate = {2025-05-04},
  abstract = {A walkthrough detailing a python setup that ditches poetry, setup.py, and even requirements.txt.},
  url = {https://devsjc.github.io/blog/20240627-the-complete-guide-to-pyproject-toml/},
  langid = {english},
}

@online{WritingYourPyprojecttoml,
  title = {Writing Your Pyproject.Toml - {{Python Packaging User Guide}}},
  urldate = {2025-05-04},
  url = {https://packaging.python.org/en/latest/guides/writing-pyproject-toml/},
}
