<!DOCTYPE html>
<html lang="en"><head>
<link href="../../assets/favicon_io/favicon.ico" rel="icon">
<script src="../../site_libs/clipboard/clipboard.min.js"></script>
<script src="../../site_libs/quarto-html/tabby.min.js"></script>
<script src="../../site_libs/quarto-html/popper.min.js"></script>
<script src="../../site_libs/quarto-html/tippy.umd.min.js"></script>
<link href="../../site_libs/quarto-html/tippy.css" rel="stylesheet">
<link href="../../site_libs/quarto-html/light-border.css" rel="stylesheet">
<link href="../../site_libs/quarto-html/quarto-syntax-highlighting-dark-d166b450ba5a8e9f7a0ab969bf6592c1.css" rel="stylesheet" id="quarto-text-highlighting-styles"><meta charset="utf-8">
  <meta name="generator" content="quarto-1.6.39">

  <meta name="dcterms.date" content="2024-02-19">
  <title>{{&lt; var course.title &gt;}} – reTerminal Sensors</title>
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/reset.css">
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/reveal.css">
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    div.columns{display: flex; gap: min(4vw, 1.5em);}
    div.column{flex: auto; overflow-x: auto;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    ul.task-list li input[type="checkbox"] {
      width: 0.8em;
      margin: 0 0.8em 0.2em -1em; /* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */ 
      vertical-align: middle;
    }
    /* CSS for syntax highlighting */
    pre > code.sourceCode { white-space: pre; position: relative; }
    pre > code.sourceCode > span { line-height: 1.25; }
    pre > code.sourceCode > span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode > span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre > code.sourceCode { white-space: pre-wrap; }
    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code > span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code > span > a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
      }
    pre.numberSource { margin-left: 3em;  padding-left: 4px; }
    div.sourceCode
      { color: #f8f8f2;  }
    @media screen {
    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
    }
    code span { color: #f8f8f2; } /* Normal */
    code span.al { color: #f07178; background-color: #2a0f15; font-weight: bold; } /* Alert */
    code span.an { color: #d4d0ab; } /* Annotation */
    code span.at { color: #00e0e0; } /* Attribute */
    code span.bn { color: #d4d0ab; } /* BaseN */
    code span.bu { color: #abe338; } /* BuiltIn */
    code span.cf { color: #ffa07a; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #abe338; } /* Char */
    code span.cn { color: #ffd700; } /* Constant */
    code span.co { color: #f8f8f2; font-style: italic; } /* Comment */
    code span.cv { color: #ffd700; } /* CommentVar */
    code span.do { color: #f8f8f2; } /* Documentation */
    code span.dt { color: #ffa07a; } /* DataType */
    code span.dv { color: #d4d0ab; } /* DecVal */
    code span.er { color: #f07178; text-decoration: underline; } /* Error */
    code span.ex { color: #00e0e0; font-weight: bold; } /* Extension */
    code span.fl { color: #d4d0ab; } /* Float */
    code span.fu { color: #ffa07a; } /* Function */
    code span.im { color: #abe338; } /* Import */
    code span.in { color: #d4d0ab; } /* Information */
    code span.kw { color: #ffa07a; font-weight: bold; } /* Keyword */
    code span.op { color: #ffa07a; } /* Operator */
    code span.ot { color: #00e0e0; } /* Other */
    code span.pp { color: #dcc6e0; } /* Preprocessor */
    code span.re { color: #00e0e0; background-color: #f8f8f2; } /* RegionMarker */
    code span.sc { color: #abe338; } /* SpecialChar */
    code span.ss { color: #abe338; } /* SpecialString */
    code span.st { color: #abe338; } /* String */
    code span.va { color: #00e0e0; } /* Variable */
    code span.vs { color: #abe338; } /* VerbatimString */
    code span.wa { color: #dcc6e0; } /* Warning */
  </style>
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/theme/quarto-ab7a322b4ca39adb1086c9e0171297e3.css">
  <link href="../../site_libs/revealjs/plugin/quarto-line-highlight/line-highlight.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/reveal-menu/menu.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/reveal-menu/quarto-menu.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/quarto-support/footer.css" rel="stylesheet">
  <style type="text/css">
    .reveal div.sourceCode {
      margin: 0;
      overflow: auto;
    }
    .reveal div.hanging-indent {
      margin-left: 1em;
      text-indent: -1em;
    }
    .reveal .slide:not(.center) {
      height: 100%;
      overflow-y: auto;
    }
    .reveal .slide.scrollable {
      overflow-y: auto;
    }
    .reveal .footnotes {
      height: 100%;
      overflow-y: auto;
    }
    .reveal .slide .absolute {
      position: absolute;
      display: block;
    }
    .reveal .footnotes ol {
      counter-reset: ol;
      list-style-type: none; 
      margin-left: 0;
    }
    .reveal .footnotes ol li:before {
      counter-increment: ol;
      content: counter(ol) ". "; 
    }
    .reveal .footnotes ol li > p:first-child {
      display: inline-block;
    }
    .reveal .slide ul,
    .reveal .slide ol {
      margin-bottom: 0.5em;
    }
    .reveal .slide ul li,
    .reveal .slide ol li {
      margin-top: 0.4em;
      margin-bottom: 0.2em;
    }
    .reveal .slide ul[role="tablist"] li {
      margin-bottom: 0;
    }
    .reveal .slide ul li > *:first-child,
    .reveal .slide ol li > *:first-child {
      margin-block-start: 0;
    }
    .reveal .slide ul li > *:last-child,
    .reveal .slide ol li > *:last-child {
      margin-block-end: 0;
    }
    .reveal .slide .columns:nth-child(3) {
      margin-block-start: 0.8em;
    }
    .reveal blockquote {
      box-shadow: none;
    }
    .reveal .tippy-content>* {
      margin-top: 0.2em;
      margin-bottom: 0.7em;
    }
    .reveal .tippy-content>*:last-child {
      margin-bottom: 0.2em;
    }
    .reveal .slide > img.stretch.quarto-figure-center,
    .reveal .slide > img.r-stretch.quarto-figure-center {
      display: block;
      margin-left: auto;
      margin-right: auto; 
    }
    .reveal .slide > img.stretch.quarto-figure-left,
    .reveal .slide > img.r-stretch.quarto-figure-left  {
      display: block;
      margin-left: 0;
      margin-right: auto; 
    }
    .reveal .slide > img.stretch.quarto-figure-right,
    .reveal .slide > img.r-stretch.quarto-figure-right  {
      display: block;
      margin-left: auto;
      margin-right: 0; 
    }
  </style>
<meta property="og:title" content="reTerminal Sensors – Connected Objects">
<meta property="og:description" content="Installing initial reTerminal packages. Reading and controlling the reTerminal hardware interfaces, e.g.&nbsp;LEDs, light sensor, screen backlight, etc.">
<meta property="og:image" content="https://john-abbott-college.github.io/6P3-Notes/lectures/docs/assets/art_title_path_only.svg">
<meta property="og:site_name" content="{{< var course.title >}}">
</head>
<body class="quarto-dark">
  <div class="reveal">
    <div class="slides">

<section id="title-slide" class="quarto-title-block center">
  <h1 class="title">reTerminal Sensors</h1>
  <p class="subtitle">Installing initial reTerminal packages. Reading and controlling the reTerminal hardware interfaces, e.g.&nbsp;LEDs, light sensor, screen backlight, etc.</p>

<div class="quarto-title-authors">
</div>

  <p class="date">2024-02-19</p>
</section>
<section id="lab-1-review" class="slide level2 scrollable">
<h2>Lab 1 Review</h2>
<p>After Lab 1, you have taken the following steps:</p>
<ol type="1">
<li>Install the Raspberry Pi OS image.</li>
</ol>
<ul>
<li>disassemble, flip the memory switch and use <code>usbboot/rpiboot</code> script to prepare internal memory for firmware flash.</li>
<li>use Raspberry Pi Imager to flash new image 64bit “Bookworm” Raspberry OS with chosen username/password and SSH enabled</li>
<li>fix the “black screen” issue by installing the latest seeed overlay drivers</li>
</ul>
<ol start="2" type="1">
<li>Update system packages</li>
</ol>
<ul>
<li>update system repositories with <code>sudo apt update</code> and <code>sudo apt upgrade</code></li>
<li>install kernel headers with <code>sudo apt install raspberrypi-kernel-headers</code></li>
<li>install <code>git</code> and <code>docker</code>, deploy simple Python webserver docker container</li>
</ul>
<ol start="3" type="1">
<li>Set up remote connection interfaces</li>
</ol>
<ul>
<li>determine your assigned IP address on the class LAN</li>
<li>determine your device MAC address</li>
<li>enable VNC interface</li>
</ul>
<p>It’s time to take a deeper look at the hardware and software our reTerminal offers.</p>
</section>
<section id="hardware" class="slide level2">
<h2>Hardware</h2>
<p><em>This section is adapted directly from the reTerminal wiki: <a href="https://wiki.seeedstudio.com/reTerminal/#features">“Getting Started with reTerminal”</a></em></p>
<p>The reTerminal is powered by a Raspberry Pi Compute Module 4 (CM4) which is a Quad-Core Cortex-A72 CPU running at 1.5GHz and a 5-inch IPS capacitive multi-touch screen with a resolution of 1280 x 720. It has sufficient amount of RAM (4GB) to perform multitasking and also has sufficient amount of eMMC storage (32GB) to install an operating system, enabling fast boot up times and smooth overall experience. It has wireless connectivity with dual-band 2.4GHz/5GHz Wi-Fi and Bluetooth 5.0 BLE.</p>
<p>reTerminal consists of a high-speed expansion interface and rich I/O for more expandability. This device has security features such as a cryptographic co-processor with secure hardware-based key storage. It also has built-in modules such as an accelerometer, light sensor and an RTC (Real-Time Clock). reTerminal has a Gigabit Ethernet Port for faster network connections and also has dual USB 2.0 Type-A ports. The 40-pin header on the reTerminal opens it for a wide range of IoT applications.</p>
<h3 id="firmware-version">Firmware &amp; Version</h3>
</section>
<section class="slide level2">

<p>Released Date Pre-Installed OS Pre-Installed Board Version<br>
STM32 Firmware</p>
</section>
<section class="slide level2">

<p>06/15/2021 2021-06-02-Raspbian(modified)-32-bit V1.0 v1.3</p>
<p>08/03/2021 2021-06-02-Raspbian(modified)-32-bit V1.1 v1.4</p>
<p>09/03/2021 2021-06-02-Raspbian(modified)-32-bit V1.6 v1.6</p>
<p>11/02/2021 2021-09-14-Raspbian(modified)-32-bit V1.8 v1.6</p>
</section>
<section id="winter-2024-what-os-did-we-install-in-lab-1-v1.8-v1.6" class="slide level2">
<h2><strong>Winter 2024</strong> <strong>What OS did we install in Lab 1?</strong> V1.8 v1.6</h2>
<p><strong>You can find a complete list of the reTerminal specifications here: <a href="https://wiki.seeedstudio.com/reTerminal/#specifications">reTerminal Specifications</a></strong></p>
</section>
<section id="raspberry-pi-os" class="slide level2">
<h2>Raspberry Pi OS</h2>
<p>In Lab 1, we re-imaged the reTerminal Operating System to run the latest, recommended version of 64-bit Raspberry Pi OS.</p>
<p>Raspberry Pi OS (previously called <em>Raspbian OS</em>) is a variation of the <a href="https://en.wikipedia.org/wiki/Debian"><strong>Debian OS</strong></a>, with optimizations for the Raspberry Pi hardware.</p>
<p>You can see more about Raspberry Pi OS and Debian in the <a href="../../topics/linux/docs/package-management-debian.qmd">Linux</a> set of lessons.</p>
</section>
<section id="programmable-sensors" class="slide level2 scrollable">
<h2>Programmable Sensors</h2>
<p><em>This section is based on the official documentation for the reTerminal: <a href="https://wiki.seeedstudio.com/reTerminal-hardware-interfaces-usage/#3-user-programmable-leds">Hardware and Interfaces Usage</a></em></p>
<blockquote>
<p>In Linux, everything is a file stream that can be read and/or written to.</p>
</blockquote>
<p>For example, keyboard inputs and communication over web-sockets are all read as a file streams.</p>
<p>The reTerminal has 3 programmable LED’s and a light sensor that can be <strong>controlled like a regular file</strong>.</p>
<p><img data-src="../assets/5-reterminal-buttons-light-sensor.png"></p>
<p>You can see, there are 3 programmable LEDs in the reTerminal:</p>
<ul>
<li><strong>STA</strong> light can be turned on as <strong>red or green</strong>.</li>
<li><strong>USR</strong> light can only be turned on as <strong>green</strong>.</li>
</ul>
<p><img data-src="../assets/5-reterminal_leds.png" title=":size=400"></p>
<p>The lights can be controlled at the OS level by editing files in the <code>/sys/class/leds/</code> directory. Use <code>ls -al</code> to list the files in this directory:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><a></a><span class="ex">username@hostname:/sys/class/leds/usr_led0</span> $ ls <span class="at">-al</span></span>
<span id="cb1-2"><a></a><span class="ex">total</span> 0</span>
<span id="cb1-3"><a></a><span class="ex">drwxr-xr-x</span> 3 root root    0 Jan 25 20:33 .</span>
<span id="cb1-4"><a></a><span class="ex">drwxr-xr-x</span> 8 root root    0 Jan 25 20:33 ..</span>
<span id="cb1-5"><a></a><span class="ex">-rw-r--r--</span> 1 root root 4096 Jan 26 22:02 brightness</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure>
<p><img data-src="../assets/5-unix-permissions-cheatsheet.png"></p>
<figcaption>Unix Permissions cheatsheet by Julia Evans</figcaption>
</figure>
</div>
<p>The <code>brightness</code> file inide the <code>usr_led0</code> controls the brightness of LED0. But, because only <code>root</code> has write permissions to this file, we will likely run into permissions errors if we try to edit the value directly:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><a></a><span class="ex">$</span> nano /sys/class/leds/usr_led0/brightness</span>
<span id="cb2-2"><a></a><span class="ex">Permission</span> denied</span>
<span id="cb2-3"><a></a></span>
<span id="cb2-4"><a></a><span class="ex">$</span> echo 255 <span class="op">&gt;</span> /sys/class/leds/usr_led0/brightness</span>
<span id="cb2-5"><a></a><span class="ex">Permission</span> denied</span>
<span id="cb2-6"><a></a></span>
<span id="cb2-7"><a></a><span class="ex">$</span> sudo echo 255 <span class="op">&gt;</span> /sys/class/leds/usr_led0/brightness</span>
<span id="cb2-8"><a></a><span class="ex">Permission</span> denied</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>There are a few possible approaches to this problem:</p>
<h3 id="use-sudo-text-editor">Use sudo + text-editor</h3>
<p>You can open a text-editor with <code>root</code> permissions using <code>sudo</code>:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><a></a><span class="co"># nano text editor</span></span>
<span id="cb3-2"><a></a><span class="fu">sudo</span> nano /sys/class/leds/usr_led0/brightness</span>
<span id="cb3-3"><a></a></span>
<span id="cb3-4"><a></a><span class="co"># or, you can use vi/vim text editor</span></span>
<span id="cb3-5"><a></a><span class="fu">sudo</span> vi /sys/class/leds/usr_led0/brightness</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>Edit the <code>brightness</code> file to a value between 0-255 using the editor. When you save, you should see the change immediately.</p>
<h3 id="use-sudo-su">Use sudo + su</h3>
<p>Using an editor is perfectly reasonable for a one-off change, but annoying if you want to make the change more often.</p>
<p>We can use the <code>echo value &gt; /path/to/file</code> pattern, but only if we have permissions to write to <code>/path/to/file</code> – we can obtain these permissions if we run the entire command as the <code>root</code> user.</p>
<blockquote>
<p><strong>NOTE:</strong> Running commands as the root user can have unintended consequences, ranging from annoying/tedious to fix, to completely devastating/permanently ruinous for your machine. You should avoid being <code>root</code> wherever possible (see <strong>Use sudo + tee</strong> section below for how to avoid it for this problem).</p>
</blockquote>
<p>You can enter a <code>root</code> shell instance using the command <code>su</code> (switch user), or by using <code>sudo -i</code> or <code>sudo -s</code>:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><a></a><span class="ex">user@hostname</span> $ sudo su</span>
<span id="cb4-2"><a></a><span class="ex">root@hostname</span> <span class="co">#</span></span>
<span id="cb4-3"><a></a></span>
<span id="cb4-4"><a></a><span class="ex">user@hostname</span> $ sudo <span class="at">-i</span></span>
<span id="cb4-5"><a></a><span class="ex">root@hostname</span> <span class="co">#</span></span>
<span id="cb4-6"><a></a></span>
<span id="cb4-7"><a></a><span class="ex">user@hostname</span> $ sudo <span class="at">-s</span></span>
<span id="cb4-8"><a></a><span class="ex">root@hostname</span> <span class="co">#</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>Your shell should now display <code>root@hostname:~#</code>.</p>
<p>Turn on the LED with maximum brightness</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><a></a><span class="co"># echo 255 &gt; brightness</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>Turn off the LED</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><a></a><span class="co"># echo 0 &gt; brightness</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>Similarly, you can control <code>usr_led1</code> and <code>usr_led2</code> and even the buzzer on <code>/sys/class/leds/usr_buzzer</code></p>
<p>When done working as root, you can exit the root shell and return to your user shell using the <code>exit</code> command (or Ctrl-D as a hotkey):</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><a></a><span class="ex">root@hostname</span> <span class="co"># exit</span></span>
<span id="cb7-2"><a></a><span class="ex">user@hostname</span> $</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<h3 id="use-sudo-tee">Use sudo + <code>tee</code></h3>
<p>If we want to avoid using a text editor, AND avoid logging into a <code>root</code> shell instance, it would be great if something like this worked:</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><a></a><span class="ex">$</span> sudo echo 255 <span class="op">&gt;</span> /sys/class/leds/usr_led0/brightness</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>But it doesn’t! Can you understand why? Consider which part of the instruction <code>sudo</code> applies to. Unfortunately, there is no way to <code>sudo &gt;</code> or <code>sudo filename</code> since <code>sudo</code> executes <strong>commands</strong> as the root user, NOT filenames/redirects.</p>
<p>What if there were a command that we could put after the redirect, and <code>sudo</code> that command? What would that command need to do? It’s time to introduce a “new” command: <code>tee</code>.</p>
<p>To be clear, <a href="https://en.wikipedia.org/wiki/Tee_(command)"><code>tee</code></a> is a 50 year old program and an absolute classic – it is as ubiquitous/essential as the other OG unix programs like <code>ls</code>, <code>cat</code>, <code>echo</code>. We will see why in the following example.</p>
<p>Try running <code>man tee</code> in your reTerminal. You should see something like the following:</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><a></a><span class="ex">TEE</span><span class="er">(</span><span class="ex">1</span><span class="kw">)</span></span>
<span id="cb9-2"><a></a></span>
<span id="cb9-3"><a></a><span class="ex">NAME</span></span>
<span id="cb9-4"><a></a>       <span class="fu">tee</span> <span class="at">-</span> read from standard input and write to standard output and files</span>
<span id="cb9-5"><a></a></span>
<span id="cb9-6"><a></a><span class="ex">SYNOPSIS</span></span>
<span id="cb9-7"><a></a>       <span class="fu">tee</span> <span class="pp">[</span><span class="ss">OPTION</span><span class="pp">]</span>... <span class="pp">[</span><span class="ss">FILE</span><span class="pp">]</span>...</span>
<span id="cb9-8"><a></a></span>
<span id="cb9-9"><a></a><span class="ex">DESCRIPTION</span></span>
<span id="cb9-10"><a></a>       <span class="ex">Copy</span> standard input to each FILE, and also to standard output.</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>We have here a command that will read from standard input, and <em>write that same content from standard input into BOTH standard output AND files</em> – the files we can specify as arguments.</p>
<p><strong>Challenge for Lab 2:</strong> where would you put <code>tee</code> and <code>sudo</code> in the command below, to fix our permissions problems?</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><a></a><span class="ex">$</span> echo 255 <span class="kw">|</span> <span class="ex">/sys/class/leds/usr-led0/brightness</span></span>
<span id="cb10-2"><a></a><span class="co"># this command is missing `tee` and `sudo`.... find where to put them, and you've learned a very important unix pattern!</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<h3 id="luminosity-sensor">Luminosity Sensor</h3>
<p>The digital light sensor can read the surrounding light levels.</p>
<ol type="1">
<li>Enter the following directory</li>
</ol>
<div class="sourceCode" id="cb11"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><a></a><span class="bu">cd</span> /sys/bus/iio/devices/iio:device0</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<ol start="2" type="1">
<li>Read the following file to obtain the light intensity value in <strong>Lux</strong></li>
</ol>
<div class="sourceCode" id="cb12"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><a></a><span class="fu">cat</span> in_illuminance_input</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>Output:</p>
<div class="sourceCode" id="cb13"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><a></a><span class="ex">pi@raspberrypi:/sys/bus/iio/devices/iio:device0</span> $ cat in_illuminance_input</span>
<span id="cb13-2"><a></a><span class="ex">2719</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p><strong>Note:</strong> We don’t need to be root to read this file. Its permissions are set to let all users read it, even-though it belongs to the root user:</p>
<div class="sourceCode" id="cb14"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><a></a><span class="ex">rw-r--r--</span> 1 root root 4096 Jan 30 22:16 in_illuminance_input</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</section>
<section id="python-library-for-reterminal" class="slide level2">
<h2>Python Library for reTerminal</h2>
<p>Seeed Studio provided a python library to access most of the sensors and actuators of the reTerminal.</p>
<p>Install the library <code>seeed-python-reterminal</code> (see official <a href="https://github.com/Seeed-Studio/Seeed_Python_ReTerminal">Github repo</a>) using <code>pip</code>:</p>
<p><strong>NOTE:</strong> See <a href="../../topics/python/docs/package-management-python.qmd">Package Management in Python</a> for a clear explanation of how to use <code>venv</code> and <code>pip</code>, particularly for <a href="../../topics/python/docs/package-management-python.qmd#root-permissions">apps requiring root permissions</a> consumer</p>
<div class="sourceCode" id="cb15"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><a></a><span class="ex">pip</span> install seeed-python-reterminal</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>Now you can import it to a test script (eg. <em>buzz.py</em>)</p>
<div class="sourceCode" id="cb16"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1"><a></a><span class="im">import</span> seeed_python_reterminal.core <span class="im">as</span> rt</span>
<span id="cb16-2"><a></a><span class="im">import</span> time</span>
<span id="cb16-3"><a></a></span>
<span id="cb16-4"><a></a><span class="bu">print</span>(<span class="st">"BUZZER ON"</span>)</span>
<span id="cb16-5"><a></a>rt.buzzer <span class="op">=</span> <span class="va">True</span></span>
<span id="cb16-6"><a></a>time.sleep(<span class="dv">1</span>)</span>
<span id="cb16-7"><a></a></span>
<span id="cb16-8"><a></a><span class="bu">print</span>(<span class="st">"BUZZER OFF"</span>)</span>
<span id="cb16-9"><a></a>rt.buzzer <span class="op">=</span> <span class="va">False</span></span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>This will sound the buzzer of the reTerminal for 1 second.</p>
<p>To run the script:</p>
<div class="sourceCode" id="cb17"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><a></a><span class="fu">sudo</span> <span class="va">$(</span><span class="fu">which</span> python<span class="va">)</span> buzz.py</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<p>Alternatively, first elevate your shell, then execute the script normally:</p>
<div class="sourceCode" id="cb18"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><a></a><span class="ex">user@hostname:~</span> $ sudo <span class="at">-i</span></span>
<span id="cb18-2"><a></a><span class="ex">root@hostname:~#</span> python buzz.py</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<blockquote>
<p><strong>Note:</strong> this library is simply a wrapper to the OS operations we did in the previous section.</p>
</blockquote>
<p>See the official <code>seeed-python-reterminal</code> <a href="https://github.com/Seeed-Studio/Seeed_Python_ReTerminal">Github repo</a> for API reference on how to control:</p>
<ul>
<li>LED’s</li>
<li>Accelerometer</li>
<li>Programmable Buttons</li>
<li>Light Sensor</li>
</ul>


</section>
    </div>
  <div class="quarto-auto-generated-content" style="display: none;">
<div class="footer footer-default">
<p>© Copyright 2024-2025 Michael Haaf. All rights reserved.</p>
</div>
</div></div>

  <script>window.backupDefine = window.define; window.define = undefined;</script>
  <script src="../../site_libs/revealjs/dist/reveal.js"></script>
  <!-- reveal.js plugins -->
  <script src="../../site_libs/revealjs/plugin/quarto-line-highlight/line-highlight.js"></script>
  <script src="../../site_libs/revealjs/plugin/pdf-export/pdfexport.js"></script>
  <script src="../../site_libs/revealjs/plugin/reveal-menu/menu.js"></script>
  <script src="../../site_libs/revealjs/plugin/reveal-menu/quarto-menu.js"></script>
  <script src="../../site_libs/revealjs/plugin/quarto-support/support.js"></script>
  

  <script src="../../site_libs/revealjs/plugin/notes/notes.js"></script>
  <script src="../../site_libs/revealjs/plugin/search/search.js"></script>
  <script src="../../site_libs/revealjs/plugin/zoom/zoom.js"></script>
  <script src="../../site_libs/revealjs/plugin/math/math.js"></script>
  <script>window.define = window.backupDefine; window.backupDefine = undefined;</script>

  <script>

      // Full list of configuration options available at:
      // https://revealjs.com/config/
      Reveal.initialize({
'controlsAuto': true,
'previewLinksAuto': false,
'pdfSeparateFragments': false,
'autoAnimateEasing': "ease",
'autoAnimateDuration': 1,
'autoAnimateUnmatched': true,
'jumpToSlide': true,
'menu': {"side":"left","useTextContentForMissingTitles":true,"markers":false,"loadIcons":false,"custom":[{"title":"Tools","icon":"<i class=\"fas fa-gear\"></i>","content":"<ul class=\"slide-menu-items\">\n<li class=\"slide-tool-item active\" data-item=\"0\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.fullscreen(event)\"><kbd>f</kbd> Fullscreen</a></li>\n<li class=\"slide-tool-item\" data-item=\"1\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.speakerMode(event)\"><kbd>s</kbd> Speaker View</a></li>\n<li class=\"slide-tool-item\" data-item=\"2\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.overview(event)\"><kbd>o</kbd> Slide Overview</a></li>\n<li class=\"slide-tool-item\" data-item=\"3\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.togglePdfExport(event)\"><kbd>e</kbd> PDF Export Mode</a></li>\n<li class=\"slide-tool-item\" data-item=\"4\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.toggleScrollView(event)\"><kbd>r</kbd> Scroll View Mode</a></li>\n<li class=\"slide-tool-item\" data-item=\"5\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.keyboardHelp(event)\"><kbd>?</kbd> Keyboard Help</a></li>\n</ul>"}],"openButton":true},
'smaller': true,
 
        // Display controls in the bottom right corner
        controls: false,

        // Help the user learn the controls by providing hints, for example by
        // bouncing the down arrow when they first encounter a vertical slide
        controlsTutorial: false,

        // Determines where controls appear, "edges" or "bottom-right"
        controlsLayout: 'edges',

        // Visibility rule for backwards navigation arrows; "faded", "hidden"
        // or "visible"
        controlsBackArrows: 'faded',

        // Display a presentation progress bar
        progress: true,

        // Display the page number of the current slide
        slideNumber: false,

        // 'all', 'print', or 'speaker'
        showSlideNumber: 'all',

        // Add the current slide number to the URL hash so that reloading the
        // page/copying the URL will return you to the same slide
        hash: true,

        // Start with 1 for the hash rather than 0
        hashOneBasedIndex: false,

        // Flags if we should monitor the hash and change slides accordingly
        respondToHashChanges: true,

        // Push each slide change to the browser history
        history: true,

        // Enable keyboard shortcuts for navigation
        keyboard: true,

        // Enable the slide overview mode
        overview: true,

        // Disables the default reveal.js slide layout (scaling and centering)
        // so that you can use custom CSS layout
        disableLayout: false,

        // Vertical centering of slides
        center: false,

        // Enables touch navigation on devices with touch input
        touch: true,

        // Loop the presentation
        loop: false,

        // Change the presentation direction to be RTL
        rtl: false,

        // see https://revealjs.com/vertical-slides/#navigation-mode
        navigationMode: 'linear',

        // Randomizes the order of slides each time the presentation loads
        shuffle: false,

        // Turns fragments on and off globally
        fragments: true,

        // Flags whether to include the current fragment in the URL,
        // so that reloading brings you to the same fragment position
        fragmentInURL: false,

        // Flags if the presentation is running in an embedded mode,
        // i.e. contained within a limited portion of the screen
        embedded: false,

        // Flags if we should show a help overlay when the questionmark
        // key is pressed
        help: true,

        // Flags if it should be possible to pause the presentation (blackout)
        pause: true,

        // Flags if speaker notes should be visible to all viewers
        showNotes: false,

        // Global override for autoplaying embedded media (null/true/false)
        autoPlayMedia: null,

        // Global override for preloading lazy-loaded iframes (null/true/false)
        preloadIframes: null,

        // Number of milliseconds between automatically proceeding to the
        // next slide, disabled when set to 0, this value can be overwritten
        // by using a data-autoslide attribute on your slides
        autoSlide: 0,

        // Stop auto-sliding after user input
        autoSlideStoppable: true,

        // Use this method for navigation when auto-sliding
        autoSlideMethod: null,

        // Specify the average time in seconds that you think you will spend
        // presenting each slide. This is used to show a pacing timer in the
        // speaker view
        defaultTiming: null,

        // Enable slide navigation via mouse wheel
        mouseWheel: false,

        // The display mode that will be used to show slides
        display: 'block',

        // Hide cursor if inactive
        hideInactiveCursor: true,

        // Time before the cursor is hidden (in ms)
        hideCursorTime: 5000,

        // Opens links in an iframe preview overlay
        previewLinks: false,

        // Transition style (none/fade/slide/convex/concave/zoom)
        transition: 'slide',

        // Transition speed (default/fast/slow)
        transitionSpeed: 'default',

        // Transition style for full page slide backgrounds
        // (none/fade/slide/convex/concave/zoom)
        backgroundTransition: 'none',

        // Number of slides away from the current that are visible
        viewDistance: 3,

        // Number of slides away from the current that are visible on mobile
        // devices. It is advisable to set this to a lower number than
        // viewDistance in order to save resources.
        mobileViewDistance: 2,

        // The "normal" size of the presentation, aspect ratio will be preserved
        // when the presentation is scaled to fit different resolutions. Can be
        // specified using percentage units.
        width: 1050,

        height: 700,

        // Factor of the display size that should remain empty around the content
        margin: 0.2,

        math: {
          mathjax: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js',
          config: 'TeX-AMS_HTML-full',
          tex2jax: {
            inlineMath: [['\\(','\\)']],
            displayMath: [['\\[','\\]']],
            balanceBraces: true,
            processEscapes: false,
            processRefs: true,
            processEnvironments: true,
            preview: 'TeX',
            skipTags: ['script','noscript','style','textarea','pre','code'],
            ignoreClass: 'tex2jax_ignore',
            processClass: 'tex2jax_process'
          },
        },

        // reveal.js plugins
        plugins: [QuartoLineHighlight, PdfExport, RevealMenu, QuartoSupport,

          RevealMath,
          RevealNotes,
          RevealSearch,
          RevealZoom
        ]
      });
    </script>
    <script id="quarto-html-after-body" type="application/javascript">
    window.document.addEventListener("DOMContentLoaded", function (event) {
      const toggleBodyColorMode = (bsSheetEl) => {
        const mode = bsSheetEl.getAttribute("data-mode");
        const bodyEl = window.document.querySelector("body");
        if (mode === "dark") {
          bodyEl.classList.add("quarto-dark");
          bodyEl.classList.remove("quarto-light");
        } else {
          bodyEl.classList.add("quarto-light");
          bodyEl.classList.remove("quarto-dark");
        }
      }
      const toggleBodyColorPrimary = () => {
        const bsSheetEl = window.document.querySelector("link#quarto-bootstrap");
        if (bsSheetEl) {
          toggleBodyColorMode(bsSheetEl);
        }
      }
      toggleBodyColorPrimary();  
      const tabsets =  window.document.querySelectorAll(".panel-tabset-tabby")
      tabsets.forEach(function(tabset) {
        const tabby = new Tabby('#' + tabset.id);
      });
      const isCodeAnnotation = (el) => {
        for (const clz of el.classList) {
          if (clz.startsWith('code-annotation-')) {                     
            return true;
          }
        }
        return false;
      }
      const onCopySuccess = function(e) {
        // button target
        const button = e.trigger;
        // don't keep focus
        button.blur();
        // flash "checked"
        button.classList.add('code-copy-button-checked');
        var currentTitle = button.getAttribute("title");
        button.setAttribute("title", "Copied!");
        let tooltip;
        if (window.bootstrap) {
          button.setAttribute("data-bs-toggle", "tooltip");
          button.setAttribute("data-bs-placement", "left");
          button.setAttribute("data-bs-title", "Copied!");
          tooltip = new bootstrap.Tooltip(button, 
            { trigger: "manual", 
              customClass: "code-copy-button-tooltip",
              offset: [0, -8]});
          tooltip.show();    
        }
        setTimeout(function() {
          if (tooltip) {
            tooltip.hide();
            button.removeAttribute("data-bs-title");
            button.removeAttribute("data-bs-toggle");
            button.removeAttribute("data-bs-placement");
          }
          button.setAttribute("title", currentTitle);
          button.classList.remove('code-copy-button-checked');
        }, 1000);
        // clear code selection
        e.clearSelection();
      }
      const getTextToCopy = function(trigger) {
          const codeEl = trigger.previousElementSibling.cloneNode(true);
          for (const childEl of codeEl.children) {
            if (isCodeAnnotation(childEl)) {
              childEl.remove();
            }
          }
          return codeEl.innerText;
      }
      const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {
        text: getTextToCopy
      });
      clipboard.on('success', onCopySuccess);
      if (window.document.getElementById('quarto-embedded-source-code-modal')) {
        const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {
          text: getTextToCopy,
          container: window.document.getElementById('quarto-embedded-source-code-modal')
        });
        clipboardModal.on('success', onCopySuccess);
      }
        var localhostRegex = new RegExp(/^(?:http|https):\/\/localhost\:?[0-9]*\//);
        var mailtoRegex = new RegExp(/^mailto:/);
          var filterRegex = new RegExp("https:\/\/john-abbott-college\.github\.io\/6P3-Notes\/");
        var isInternal = (href) => {
            return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);
        }
        // Inspect non-navigation links and adorn them if external
     	var links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');
        for (var i=0; i<links.length; i++) {
          const link = links[i];
          if (!isInternal(link.href)) {
            // undo the damage that might have been done by quarto-nav.js in the case of
            // links that we want to consider external
            if (link.dataset.originalHref !== undefined) {
              link.href = link.dataset.originalHref;
            }
          }
        }
      function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {
        const config = {
          allowHTML: true,
          maxWidth: 500,
          delay: 100,
          arrow: false,
          appendTo: function(el) {
              return el.closest('section.slide') || el.parentElement;
          },
          interactive: true,
          interactiveBorder: 10,
          theme: 'light-border',
          placement: 'bottom-start',
        };
        if (contentFn) {
          config.content = contentFn;
        }
        if (onTriggerFn) {
          config.onTrigger = onTriggerFn;
        }
        if (onUntriggerFn) {
          config.onUntrigger = onUntriggerFn;
        }
          config['offset'] = [0,0];
          config['maxWidth'] = 700;
        window.tippy(el, config); 
      }
      const noterefs = window.document.querySelectorAll('a[role="doc-noteref"]');
      for (var i=0; i<noterefs.length; i++) {
        const ref = noterefs[i];
        tippyHover(ref, function() {
          // use id or data attribute instead here
          let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');
          try { href = new URL(href).hash; } catch {}
          const id = href.replace(/^#\/?/, "");
          const note = window.document.getElementById(id);
          if (note) {
            return note.innerHTML;
          } else {
            return "";
          }
        });
      }
      const findCites = (el) => {
        const parentEl = el.parentElement;
        if (parentEl) {
          const cites = parentEl.dataset.cites;
          if (cites) {
            return {
              el,
              cites: cites.split(' ')
            };
          } else {
            return findCites(el.parentElement)
          }
        } else {
          return undefined;
        }
      };
      var bibliorefs = window.document.querySelectorAll('a[role="doc-biblioref"]');
      for (var i=0; i<bibliorefs.length; i++) {
        const ref = bibliorefs[i];
        const citeInfo = findCites(ref);
        if (citeInfo) {
          tippyHover(citeInfo.el, function() {
            var popup = window.document.createElement('div');
            citeInfo.cites.forEach(function(cite) {
              var citeDiv = window.document.createElement('div');
              citeDiv.classList.add('hanging-indent');
              citeDiv.classList.add('csl-entry');
              var biblioDiv = window.document.getElementById('ref-' + cite);
              if (biblioDiv) {
                citeDiv.innerHTML = biblioDiv.innerHTML;
              }
              popup.appendChild(citeDiv);
            });
            return popup.innerHTML;
          });
        }
      }
    });
    </script>
    

</body></html>